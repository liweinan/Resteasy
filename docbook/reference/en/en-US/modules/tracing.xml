<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                         "http://www.docbook.org/xml/4.4/docbookx.dtd">
 -->
<chapter id="Tracing_Feature">
    <title>RESTEasy Tracing Feature</title>
    <section>
        <title>Overview</title>
        <para>
            Tracing feature is a way for the users of the RESTEasy to understand what's going on internally in the
            container when a request is processed. It's different from the pure logging system or profiling feature,
            which provides more general information about the request and response.
        </para>
        <para>
            The tracing feature provides more internal states of the JAX-RS container. For example, it could be able
            to show what filters a request is going through, or how long time a request is processed and other kinds
            of information.
        </para>
        <para>
            Currently it doesn't have a standard or spec to define the tracing feature, so the tracing feature is
            tightly coupled with the concrete JAX-RS implementation itself. In this chapter, let's check the design and
            usage of the tracing feature.
        </para>
    </section>
    <section>
        <title>Tracing Info Mode</title>
        <para>The RESTEasy tracing feature supports three logging mode:
        </para>
        <itemizedlist>
            <listitem>OFF</listitem>
            <listitem>ON_DEMAND</listitem>
            <listitem>ALL</listitem>
        </itemizedlist>
        <para>
            "ALL" will enable the tracing feature. "ON_DEMAND" mode will give the control to client side: A client can
            send
            a tracing request via HTTP header and get the tracing info back from response headers. "OFF" mode will
            disable
            the tracing feature, and this is the default mode.
        </para>
    </section>
    <section>
        <title>Tracing Info Level</title>
        <para>The tracing info has three levels:
        </para>
        <itemizedlist>
            <listitem>SUMMARY</listitem>
            <listitem>TRACE</listitem>
            <listitem>VERBOSE</listitem>
        </itemizedlist>
        <para>
            The "SUMMARY" level will emit some brief tracing information. The "TRACE" level will produce more detailed
            tracing information, and the "VERBOSE" level will generate extremely detailed tracing information.
        </para>
        <para>
            The tracing feature relies on the JBoss Logging framework to produce the tracing info, so the JBoss Logging
            configuration actually controls the final output of the tracing info. So it is JBoss Logging framework
            configuration
            that controls the logging threshold of the tracing info.
        </para>
    </section>
    <section>
        <title>Basic Usage</title>
        <para>By default, the tracing feature is turned off. If you want to enable the tracing feature, you need to
            add the following dependency in your project:
            <programlisting><![CDATA[<dependency>
    <groupId>org.jboss.resteasy</groupId>
    <artifactId>resteasy-tracing-api</artifactId>
    <version>1.0.0.Beta4-SNAPSHOT</version>
</dependency>]]></programlisting>
        </para>
        <para>
            Because the tracing feature is an optional feature, the above dependency is provided by the
            "resteasy-extensions" project: <ulink url="https://github.com/resteasy/resteasy-extensions">
            resteasy-extensions</ulink>.
        </para>
        <para>
            After including the dependency in your project, you can set the tracing mode and tracing level via the context-param parameters in your web
            project’s web.xml file. Here is an example of the setting:
            <programlisting>
                <![CDATA[resteasy.server.tracing.type=ALL
                    resteasy.server.tracing.threshold=SUMMARY]]>
            </programlisting>
        </para>
        <para>
            With above setting, we have enabled the server tracing, and put the tracing level to summary. If the
            underlying jboss logger’s output threadshold is higher than the tracing level setting, then the users
            can start to get the tracing info from server side and from response headers. Here is some sample text
            of the server side tracing log:
            <programlisting>
                <![CDATA[16:21:40,110 INFO  [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff START baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/type] method=[GET] authScheme=[n/a] accept=n/a accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a content-length=n/a  [ ---- ms]
                    16:21:40,110 TRACE [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff START_HEADERS Other request headers: Connection=[Keep-Alive] Host=[localhost:8081] User-Agent=[Apache-HttpClient/4.5.4 (Java/1.8.0_201)]  [ ---- ms]
                    16:21:40,114 INFO  [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff PRE_MATCH_SUMMARY PreMatchRequest summary: 0 filters [ 0.04 ms]
                    16:21:40,118 DEBUG [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff REQUEST_FILTER Filter by [io.weli.tracing.HttpMethodOverride @60353244] [ 0.02 ms]
                    ...
                    16:21:40,164 INFO  [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff RESPONSE_FILTER_SUMMARY Response summary: 1 filters [ 8.11 ms]
                    16:21:40,164 INFO  [general] org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@721299ff FINISHED Response status: 200 [ ---- ms]]]>
            </programlisting>
            From the above tracing log output, we can see it belongs to two requests. One request id is 42946517 and
            another is 3a62b5dd.
        </para>
    </section>
    <section>
        <title>Client side tracing info</title>
        <para>
            For client side, here is some sample text in response header:

            <programlisting>
                <![CDATA[$ curl -i http://localhost:8081/foo
                HTTP/1.1 200 OK
                X-RESTEasy-Tracing-026: org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@7a49a8aa MBW         [ ---- / 61.57 ms |  ---- %] [org.jboss.resteasy.plugins.providers.InputStreamProvider @1cbf0b08] is skipped
                ...
                Date: Wed, 27 Mar 2019 09:39:50 GMT
                Connection: keep-alive
                X-RESTEasy-Tracing-000: org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@7a49a8aa START       [ ---- /  ---- ms |  ---- %] baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/type] method=[GET] authScheme=[n/a] accept=*/* accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a content-length=n/a
                ...
                X-RESTEasy-Tracing-025: org.jboss.resteasy.plugins.server.servlet.Servlet3AsyncHttpRequest@7a49a8aa MBW         [ ---- / 61.42 ms |  ---- %] [org.jboss.resteasy.plugins.providers.FileRangeWriter @35b791fa] is skipped
                ```]]>
            </programlisting>
            From above client side output, we can see there are `X-RESTEasy-Tracing-X` info in response headers, and
            they are numbered in order.

        </para>
    </section>
    <section>
        <title>Json formatted response</title>
        <para>The Resteasy Tracing Feature has the ability to let tracing info to be returned in JSON format. To use
            this feature, you need to add the tracing-api as dependency firstly:
            <programlisting>
                <![CDATA[
<dependency>
    <groupId>org.jboss.resteasy</groupId>
    <artifactId>resteasy-tracing-api</artifactId>
    <version>1.0.0-SNAPSHOT</version>
</dependency>
]]>
            </programlisting>
        </para>
        <para>
            After including the above basic package, then we need to choose a JSON provider for tracing module to
            generate JSON formatted info. There are two JSON providers you can choose from and they both support the
            tracing feature. One is the jackson2 provider:
            <programlisting>
                <![CDATA[
<dependency>
    <groupId>org.jboss.resteasy</groupId>
    <artifactId>resteasy-jackson2-provider</artifactId>
    <version>4.0.0-SNAPSHOT</version>
</dependency>
]]>
            </programlisting>
        </para>
        <para>
            The other option is to use the json-binding provider:
            <programlisting>
                <![CDATA[
<dependency>
    <groupId>org.jboss.resteasy</groupId>
    <artifactId>resteasy-json-binding-provider</artifactId>
    <version>4.0.0-SNAPSHOT</version>
</dependency>
                ]]>
            </programlisting>
        </para>
        <para>
            After including either of the above module, now we can request the resource server for JSON formatted data.
            The method is to send a format request header:
            <programlisting>
                <![CDATA[
X-RESTEasy-Tracing-Accept-Format: JSON
]]>
            </programlisting>
        </para>
        <para>
            Here is a request example:
            <programlisting>
                <![CDATA[
$ curl -H "X-RESTEasy-Tracing-Accept-Format: JSON" -i http://localhost:8081/foo
]]></programlisting>
        </para>
        <para>
            And the response will be like this:

            <programlisting>
                <![CDATA[
X-RESTEasy-Tracing-000:
[{"duration":0,"event":"START","text":"baseUri=[http://localhost:8081/]
requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/*
accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a
content-length=n/a
","timestamp":46600869878437},{"duration":0,"event":"START_HEADERS","text":"Other
request headers: Accept=[*/*] Host=[localhost:8081] User-Agent=[curl/7.55.1]
X-RESTEasy-Tracing-Accept-Format=[JSON]
","timestamp":46600870751617},{"duration":18336,"event":"PRE_MATCH_SUMMARY","tex
t":"PreMatchRequest summary: 0
filters","timestamp":46600872781491},{"duration":20724,"event":"REQUEST_FILTER",
"text":"Filter by [io.weli.tracing.HttpMethodOverride
@585b0020]","timestamp":46600876716467},{"duration":19414,"event":"REQUEST_FILTE
R","text":"Filter by [org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter
@3779d352]","timestamp":46600877017341},{"duration":657192,"event":"REQUEST_FILT
ER_SUMMARY","text":"Request summary: 2 filters",
...
]]></programlisting>
        </para>
        <para>
            After reformat the above response, we can see the response structure is like this:

            <programlisting><![CDATA[
[
{
“duration”: 0,
“event”: “START”,
“text”: “baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/* accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a content-length=n/a “,
“timestamp”: 46600869878437
},
{
“duration”: 0,
“event”: “START_HEADERS”,
“text”: “Other request headers: Accept=[*/*] Host=[localhost:8081] User-Agent=[curl/7.55.1] X-RESTEasy-Tracing-Accept-Format=[JSON] “,
“timestamp”: 46600870751617
},
{
“duration”: 18336,
“event”: “PRE_MATCH_SUMMARY”,
“text”: “PreMatchRequest summary: 0 filters”,
“timestamp”: 46600872781491
},
{
“duration”: 20724,
“event”: “REQUEST_FILTER”,
“text”: “Filter by [io.weli.tracing.HttpMethodOverride @585b0020]”,
“timestamp”: 46600876716467
},
...
]]]>
            </programlisting>
            The timestamp is the event start time, and the other fields are quite straightforward. The JSON formatted
            data should be more suitable to be parsed by code. This feature is currently just in 4.0.0-SNAPSHOT, and
            haven’t been officially released yet.

        </para>
    </section>
    <section>
        <title>Tracing Example</title>
        <para>
            In the resteasy-example project, it contains a tracing-example to show the usages of tracing features, and
            here is the link of the sample project: <ulink
                url="https://github.com/resteasy/resteasy-examples/tree/master/tracing-example">RESTEasy Tracing
            Example</ulink>. Please check the example to see the usages in action.
        </para>
    </section>
</chapter>